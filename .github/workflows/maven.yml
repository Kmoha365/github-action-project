 

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  compile:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile
  security-check:

    runs-on: self-hosted
    needs: compile

    steps:
    - uses: actions/checkout@v4
    
    - name: trivy FS scan
      run: trivy fs --format table -o fs-report.json .    

    - name: gitleaks installation
      run: sudo apt install gitleaks -y
    - name: gitleaks code scan
      run: gitleaks detect source . -r gitleasks-report.json -f json
  test:

    runs-on: self-hosted
    needs: security-check

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: run unit test
      run: mvn test

  buildproject_sonarscan:
        runs-on: self-hosted
        needs: test

        steps:
         - uses: actions/checkout@v4

         - name: Set up JDK 17
           uses: actions/setup-java@v4
           with:
             java-version: '17'
             distribution: 'temurin'
             cache: maven
             
         - name: package maven
           run: mvn package
         - name: SonarQube Scan
           run: sonar-scanner
           env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

         - name: SonarQube Quality Gate check
           id: sonarqube-quality-gate-check
           uses: sonarsource/sonarqube-quality-gate-action@master
           with:
             pollingTimeoutSec: 600
           env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

        


             
        


             
